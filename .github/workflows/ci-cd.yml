name: tic-tac cicd
on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore: 
      - 'kubernetes/*'
  pull_request: 
    branches: 
      - main
jobs:
  build-job:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: nodejs setup
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: install dependencies
        run: npm ci

      - name: build
        run: npm run build
      
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tic-tac-artifact
          path: dist/
          retention-days: 7

  Static-Analysis:
    needs: build-job
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 22

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
  
  unit-testing:
    needs: Static-Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 22

      - name: Install Node.js dependencies
        run: npm ci

      - name: run test
        run: |
          npm test
          if [ $? -eq 0 ]; then
            echo "Test is passed!!"
          else 
            echo "Test is failed!!!"
            exit 1
          fi

  Docker-Build:
    needs: unit-testing
    runs-on: ubuntu-latest
    env:
      IMAGE: 'tic-tac'
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: tic-tac-artifact
          path: dist/
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build image and push
        run: |
         docker build -t ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE  }}:${{ github.sha }} .
         docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE }}:${{ github.sha }}
         


             
      

      
